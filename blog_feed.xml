<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>CSS Bristol</title>
    <description>CSS is the University of Bristol Computer Science Society. We exist to represent, support and entertain all members of the Computer Science department.</description>
    <link>http://www.cssbristol.co.uk/</link>
    <atom:link href="http://www.cssbristol.co.uk/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Mon, 08 Feb 2021 15:11:38 +0000</pubDate>
    <lastBuildDate>Mon, 08 Feb 2021 15:11:38 +0000</lastBuildDate>
    <generator>Jekyll v3.9.0</generator>
    
      <item>
        <title>CSS Boeing Hackathon 2018: SPACE</title>
        <description>&lt;p&gt;&lt;strong&gt;The CSS Boeing Hackathon is back! MVB, 11am Wednesday 28th Feb - 1pm Thursday 1st March&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2018-02-28-boeing-hack/cover.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;h1 id=&quot;-important-information-&quot;&gt;//// IMPORTANT INFORMATION ////&lt;/h1&gt;

&lt;h2 id=&quot;-signup-&quot;&gt;// SIGNUP //&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://goo.gl/forms/PFVMp2J89mdVkdRi1&quot;&gt;Link here&lt;/a&gt;. Teams of up to 6 people&lt;/li&gt;
  &lt;li&gt;Not got anyone to work with or a full team? No worries. Just indicate that you‚Äôd like to be matched with others and we‚Äôll sort out the rest.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-prizes-&quot;&gt;// PRIZES //&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;6x Sphero Mini!&lt;/li&gt;
  &lt;li&gt;6x Google Home Mini!&lt;/li&gt;
  &lt;li&gt;6x LIFX Smart Lights!&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-free-food-and-drinks-&quot;&gt;// FREE FOOD AND DRINKS //&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;If you have any dietary requirements, state them on the signup form or email events@cssbristol.co.uk&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-rules-&quot;&gt;// RULES //&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://docs.google.com/document/d/1RXPGyz3aqpJKMluvNhWkN_rSwItzHjIUJPS2jEG26y4/edit?usp=sharing&quot;&gt;Can be found here!&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-theme-&quot;&gt;// THEME //&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Our theme this year is SPACE! üååüöÄ&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The prizes will be awarded in three categories:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;em&gt;Space data&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Find a cool way to use satellite imagery or other data collected in space.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Software/hardware for space&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Build something that we could send into space!&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;em&gt;Explore space&lt;/em&gt;
    &lt;ul&gt;
      &lt;li&gt;Help non-scientists to explore and learn about space.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Here are some example projects to get your brains whirring:&lt;/p&gt;

&lt;p&gt;‚Äì NEO Mapper&lt;/p&gt;

&lt;p&gt;Identifying natural boundaries (rivers) from 3D asteroid surface data
https://github.com/abbro-ca/VestaRainbow
https://www.youtube.com/watch?v=DE0qdKAN31A&amp;amp;t=55m&lt;/p&gt;

&lt;p&gt;‚Äì Kid On The Moon&lt;/p&gt;

&lt;p&gt;Interactive app for children to explore the moon and man‚Äôs journeys to it
https://2016.spaceappschallenge.org/challenges/solar-system/book-it-to-the-moon/projects/kid-on-the-moon&lt;/p&gt;

&lt;p&gt;‚Äì NatEv Explorer&lt;/p&gt;

&lt;p&gt;Display crowdsourced natural events on a 3D globe
https://open.nasa.gov/innovation-space/natev-explorer/&lt;/p&gt;

&lt;p&gt;‚Äì FractalNet&lt;/p&gt;

&lt;p&gt;P2P wearables for communication in space
https://2016.spaceappschallenge.org/challenges/space-station/rock-it-space-fashion-and-design/projects/fractalnet&lt;/p&gt;

&lt;p&gt;‚Äì Pollen Alert&lt;/p&gt;

&lt;p&gt;Use open data and satellite imagery to predict pollen count
https://2017.spaceappschallenge.org/challenges/our-ecological-neighborhood/trace-invaders/teams/lemon-py-1/project&lt;/p&gt;

&lt;p&gt;‚Äì Heliox&lt;/p&gt;

&lt;p&gt;Use energy and solar radiation data to predict energy production
https://2017.spaceappschallenge.org/challenges/earth-and-us/you-are-my-sunshine/teams/heliox/project&lt;/p&gt;

&lt;p&gt;Maybe you‚Äôll write a piece of software that will improve shipping efficiency. How about a system for monitoring air pollution? Or something that will enable autonomous vehicles? Perhaps you‚Äôll even write a cool visualisation that uses NASA‚Äôs Open Data platform (https://opensource.gsfc.nasa.gov/ ).&lt;/p&gt;

&lt;p&gt;If you want to make use of satellite data, we‚Äôll be releasing some guides to help you soon.&lt;/p&gt;

&lt;h2 id=&quot;-tools-available-&quot;&gt;// TOOLS AVAILABLE //&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Join the Discord server &lt;a href=&quot;https://discordapp.com/invite/pt97nDh&quot;&gt;here&lt;/a&gt; for updates on the day!&lt;/li&gt;
  &lt;li&gt;More to come&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-good-luck-&quot;&gt;// GOOD LUCK! //&lt;/h2&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;https://www.facebook.com/events/153087555349796/&quot;&gt;
    Facebook Event
&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 29 Jan 2018 17:30:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/event/2018/01/29/boeing-hack.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/event/2018/01/29/boeing-hack.html</guid>
        
        
        <category>event</category>
        
      </item>
    
      <item>
        <title>First Steps with Git</title>
        <description>&lt;p&gt;Git is a way to store, back up and organise your code. It is one of those things that you wish you‚Äôd been taught in your first term if you discover it later on.&lt;/p&gt;

&lt;p&gt;This tutorial assumes that you are moderately familiar with using a terminal/shell.&lt;/p&gt;

&lt;h2 id=&quot;installing&quot;&gt;Installing&lt;/h2&gt;

&lt;p&gt;The lab machines should have git installed already. On your own machine, type ‚Äúgit‚Äù in a terminal and if you‚Äôre lucky you‚Äôll get the help text, showing it‚Äôs installed. If you need to install it yourself:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;If you‚Äôre using Linux, your package manager should provide it. Try &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install git&lt;/code&gt; for debian and derivatives like ubuntu and mint. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo yum install git&lt;/code&gt; should work on Fedora.&lt;/li&gt;
  &lt;li&gt;On a Mac, if you‚Äôre using homebrew then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brew install git&lt;/code&gt; should do it, or you can download git from &lt;a href=&quot;https://git-scm.com/download/mac&quot;&gt;the website&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;On Windows, &lt;a href=&quot;https://git-for-windows.github.io/&quot;&gt;git for windows&lt;/a&gt; gives you git and an ‚Äúopen git here‚Äù option in the right-click menu of every folder.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;create-a-repository&quot;&gt;Create a repository&lt;/h2&gt;

&lt;p&gt;When you start on a new project or unit, create an empty folder, go to it in your terminal and type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git init&lt;/code&gt;. This creates a hidden subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt; which is your &lt;strong&gt;repository&lt;/strong&gt; - it will store the entire history of your project and every change you make, as long as you remember to commit these changes (which we‚Äôll do soon). This not only gets you unlimited undo/redo, so you can try things out and undo them if they don‚Äôt work, but you can also maintain several different versions of your code and switch between them.&lt;/p&gt;

&lt;p&gt;The folder containing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.git&lt;/code&gt; folder is your &lt;strong&gt;working tree&lt;/strong&gt; - one particular version of your project.&lt;/p&gt;

&lt;h2 id=&quot;making-commits&quot;&gt;Making commits&lt;/h2&gt;

&lt;p&gt;Let‚Äôs say you‚Äôve written some code in a file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.c&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-C&quot;&gt;#include &amp;lt;stdio.h&amp;gt;

int main() {
  puts(&quot;Hello World!&quot;);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; in your terminal. This will show that there‚Äôs an untracked change in file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.c&lt;/code&gt;. If colours are set up correctly, untracked changes are red and tracked ones are green.&lt;/p&gt;

&lt;p&gt;To tell git to track this change, run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add hello.c&lt;/code&gt;. Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; again and you‚Äôll see ‚Äúnew file: hello.c‚Äù, possibly in green. This means you‚Äôve told git about this change, but it‚Äôs not committed yet (not saved in the repository). Run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m 'New file'&lt;/code&gt;. Each commit must have a message and the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-m &amp;lt;message&amp;gt;&lt;/code&gt; option is a way to provide this. The single quotes around the message are to do with how your shell parses arguments - basically if you put single quotes around a commit message then you can use spaces, punctuation etc. and it should work as long as there‚Äôs no single quotes in your message itself. Do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; again and you should see ‚Äúnothing to commit, working tree clean‚Äù which is a good message to see.&lt;/p&gt;

&lt;p&gt;The simplest way to work with git is this: make changes, commit changes, repeat. Git lets you undo/redo changes at the commit level so it‚Äôs helpful to make lots of small commits instead of few large ones; commit messages help you find commits when you want to e.g. revert to a particular commit.&lt;/p&gt;

&lt;p&gt;If you make a change to your source file - perhaps add a comma after &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hello&lt;/code&gt; - you‚Äôll see ‚Äúmodified: hello.c‚Äù under a heading ‚ÄúChanges not staged for commit‚Äù (in red if colours are working). &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add hello.c&lt;/code&gt; tracks the change (it now appears under ‚ÄúChanges to be committed‚Äù in the status text), &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m 'Added a comma'&lt;/code&gt; commits it:&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git status
On branch master
Changes not staged for commit:
  (use &quot;git add &amp;lt;file&amp;gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &amp;lt;file&amp;gt;...&quot; to discard changes in working directory)

        modified:   hello.c

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)

$ git add hello.c

$ git status

On branch master
Changes to be committed:
  (use &quot;git reset HEAD &amp;lt;file&amp;gt;...&quot; to unstage)

        modified:   hello.c

$ git commit -m 'Added a comma.'
[master 6e7e782] Added a comma.
1 file changed, 1 insertion(+), 1 deletion(-)

$ git status
On branch master
nothing to commit, working tree clean
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In summary:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; shows you whether there are any uncommitted changes in your repos.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add FILE&lt;/code&gt; tracks a change, but doesn‚Äôt commit it yet.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit -m 'MESSAGE'&lt;/code&gt; commits all tracked changes.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;If ‚Äúgit status‚Äù shows ‚Äúworking tree clean‚Äù then all your changes have been saved.&lt;/p&gt;

&lt;h2 id=&quot;reverting-changes&quot;&gt;Reverting changes&lt;/h2&gt;

&lt;p&gt;As you might have gathered already from the help text, if you‚Äôve made changes to a file that you‚Äôve not committed yet and you want to undo them back to the last commit, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout -- FILENAME&lt;/code&gt; reverts the file. There is a space both before and after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--&lt;/code&gt; in that command.&lt;/p&gt;

&lt;p&gt;If you‚Äôve committed changes and want to go back to an earlier commit, the first thing you do is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log&lt;/code&gt; which shows you a list of all commits. If there are a lot, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log | less&lt;/code&gt; lets you view them one page at a time - advance with SPACE, exit with Q. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git log --oneline&lt;/code&gt; shows just one line per commit and you can stick &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;| less&lt;/code&gt; on the end of that too. Each commit has a hash value which is a long hexadecimal string. When referencing a commit, you usually only need to type the first few characters of the hash.&lt;/p&gt;

&lt;p&gt;Let‚Äôs say I decide I don‚Äôt want a comma after ‚ÄúHello‚Äù after all.&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;$ git log --oneline
6e7e782 Added a comma.
4f251ef New file

$ git checkout 4f25 hello.c`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout HASH FILENAME&lt;/code&gt; reverts the file to the state in the given commit. The file is now in ‚Äúchanged and not tracked‚Äù state as if you‚Äôd edited it by hand. You can also &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git checkout HASH&lt;/code&gt;  filename to revert all files back to an older commit.&lt;/p&gt;

&lt;h2 id=&quot;excluding-files&quot;&gt;Excluding files&lt;/h2&gt;

&lt;p&gt;Let‚Äôs compile our file: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gcc hello.c -Wall -Werror -std=c99 -o hello&lt;/code&gt;. You do use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Wall -Werror&lt;/code&gt; on all your C programs to catch possible bugs, right?&lt;/p&gt;

&lt;p&gt;We now have two files in the working tree: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.c&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.exe&lt;/code&gt; if we‚Äôre on windows). However we don‚Äôt want to track &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello&lt;/code&gt; in the repository - you want your sources but not your compiled files in the repository. You can just compile the sources again whenever you need to, after all.&lt;/p&gt;

&lt;p&gt;Create a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt; (yes, it starts with a dot) with one line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello&lt;/code&gt; (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hello.exe&lt;/code&gt;) in it. Each line in this file is treated as a pattern that matches one or more files (you can do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*.exe&lt;/code&gt; to exclude all windows executables for example) that git should ignore. Adding the name of a folder to a gitignore file ignores that folder and everything in it. When you do &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt; again you‚Äôll see that git ignores your executable file, but notices the new file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.gitignore&lt;/code&gt;. Add that file to the repository and commit.&lt;/p&gt;

&lt;h1 id=&quot;remote-repositories&quot;&gt;Remote repositories&lt;/h1&gt;

&lt;p&gt;So far we‚Äôve just saved our project‚Äôs history in a subfolder on our own machine. The next step is to save it in the cloud so that several people can work on it together, or you can work on it from different machines (for example, home and lab PC).&lt;/p&gt;

&lt;p&gt;There are three big free providers of git services: &lt;a href=&quot;https://gitlab.com/&quot;&gt;gitlab&lt;/a&gt;, &lt;a href=&quot;https://github.com/&quot;&gt;github&lt;/a&gt; and &lt;a href=&quot;https://bitbucket.org/&quot;&gt;bitbucket&lt;/a&gt;. Gitlab and bitbucket offer you unlimited (within reason) free private repositories (where you control who can read/write them), github gives you one free private repository (5 if you sign up for their student pack with your university e-mail). All three providers offer unlimited free public repositories for open-source projects.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;WARNING: do not under any circumstances place code that you have submitted or intend to submit as assessed coursework to a public repository on any provider. If another student finds this code and submits a copy of it, you are both in trouble for plagiarism. Yes, this has happened in the past.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;The next few steps in this tutorial are based on the gitlab UI to create a remote repository, but github and bitbucket offer the same features.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Go to &lt;a href=&quot;https://gitlab.com&quot;&gt;gitlab.com&lt;/a&gt; and register an account.&lt;/li&gt;
  &lt;li&gt;Click ‚ÄúNew project‚Äù, choose a project name and set visibility to private.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You get to see your project page. The git address of your project is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://gitlab.com/USERNAME/PROJECTNAME.git&lt;/code&gt;, so for example my username is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;david-bristol&lt;/code&gt; and I have a project called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;coconut&lt;/code&gt; that lives at &lt;a href=&quot;https://gitlab.com/david-bristol/coconut.git&quot;&gt;https://gitlab.com/david-bristol/coconut.git&lt;/a&gt;. If you access this link on the web, it‚Äôll remove the ‚Äú.git‚Äù part at the end but you need it in your terminal.&lt;/p&gt;

&lt;p&gt;The command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone ADDRESS&lt;/code&gt; downloads a repository and sets up some information so that you can synchronise the local and remote copies. For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git clone https://gitlab.com/david-bristol/coconut.git&lt;/code&gt; will create a subfolder &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;coconut&lt;/code&gt; with the contents of my coconut project. Since this is a public project, the files will just appear - for a private project, git will ask for your username and password first.&lt;/p&gt;

&lt;p&gt;You can now use the following two commands to synchronise the local and remote copies:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt; pulls any changes from the remote copy to the local one.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt; pushes your local changes to the remote copy.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It is advised to use these commands only when your working tree is clean.&lt;/p&gt;

&lt;p&gt;The rough outline of setting up a git project to work together:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Everyone creates an account with the same provider.&lt;/li&gt;
  &lt;li&gt;One person creates the online repository and gives everyone else on the project access to it (assuming a private repository). On gitlab, choose settings/members in the left menu, enter the other developers‚Äô gitlab usernames and set their role to ‚ÄúDeveloper‚Äù (the default ‚ÄúGuest‚Äù lets you read but not write).&lt;/li&gt;
  &lt;li&gt;Everyone clones the repository to their own machine.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The commands &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git add&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git commit&lt;/code&gt; add changes from your &lt;strong&gt;working tree&lt;/strong&gt; to the &lt;strong&gt;local copy of the repository&lt;/strong&gt;. The commands &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt; move committed changes from the &lt;strong&gt;local copy of the repository&lt;/strong&gt; to the &lt;strong&gt;remote copy of the repository&lt;/strong&gt; and back again. After pushing/pulling, all copies of the repository should be identical.&lt;/p&gt;

&lt;p&gt;Your daily coding routine:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt; to download any changes that your colleagues have made.&lt;/li&gt;
  &lt;li&gt;Make changes, commit, repeat. Once again: make small changes and commit frequently. This step only writes to the local copy of your repository and does not require internet access.&lt;/li&gt;
  &lt;li&gt;At the end of the day, or whenever you want to share code with others, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt;. This uploads your changes to the server.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;You can save yourself a lot of trouble by only doing push/pull operations with a clean working tree, e.g. you‚Äôve added and committed all changes to the local copy of your repository.
In theory, that‚Äôs all you need. In practice, what happens if two people edit the same file?&lt;/p&gt;

&lt;p&gt;&lt;em&gt;You do not have to agree via e-mail or some other system who is currently editing which files. Git is set up to handle this situation!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;What happens is that your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git push&lt;/code&gt; will fail if someone else has pushed since your last pull. In this case, do a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git pull&lt;/code&gt;. If you‚Äôve both been editing different files, git will update the ones you haven‚Äôt changed with the new versions from the remote copy. Check that everything still works/compiles and then try and push again.&lt;/p&gt;

&lt;p&gt;If you‚Äôve both been editing the same files, git will see if there‚Äôs an obvious way to combine your changes (for example you‚Äôve both edited different functions in the same file). If so, all is well. If not, you have a conflict. The line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CONFLICT ...&lt;/code&gt; when you try and pull will alert you to this and tell you which files are affected (so will &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;git status&lt;/code&gt;). When you open these files, you‚Äôll see markers as follows in places where there‚Äôs a conflict (search for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/code&gt; in your text editor to find them):&lt;/p&gt;

&lt;div class=&quot;language-text highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt; HEAD
puts(&quot;Hello, world!&quot;);
=======
puts(&quot;Hi world!&quot;);
&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt; 31be48e8e2a86fb71b0b0b61bb08019314d87a1b
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This means that you tried to change a line to read &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puts(&quot;Hello, world!&quot;);&lt;/code&gt; but someone else changed the same line to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;puts(&quot;Hi world!&quot;);&lt;/code&gt; since your last pull. Fix the conflict by choosing what to do with the line(s) in question and then delete the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;&amp;lt;&amp;lt; === &amp;gt;&amp;gt;&amp;gt;&lt;/code&gt; marker lines and check that everything compiles and works again. Then you can add and commit the file and try to push again.&lt;/p&gt;

&lt;p&gt;Conflicts, although annoying, are nothing to be afraid of. They can happen as part of normal git working practice in a team and you deal with them as they happen.&lt;/p&gt;
</description>
        <pubDate>Wed, 18 Oct 2017 14:00:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/tutorial/2017/10/18/git.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/tutorial/2017/10/18/git.html</guid>
        
        
        <category>tutorial</category>
        
      </item>
    
      <item>
        <title>Event: CSS Bar Crawl</title>
        <description>&lt;p&gt;It‚Äôs that time of year again! Get your t-shirt and join us on the 2017 CSS Bar Crawl.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;https://www.bristolsu.org.uk/groups/computer-science-society/events/css-bar-crawl-2017/buy_ticket&quot;&gt;
  Get your t-shirt now üëïüéΩüëöüëî (¬£6.50)
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;For ¬£6.50 you get:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;An &lt;strong&gt;incredibly exclusive&lt;/strong&gt; bar crawl t-shirt&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Free entry&lt;/strong&gt; and &lt;strong&gt;queue jump&lt;/strong&gt; to Lola Lo until 10.30pm&lt;/li&gt;
  &lt;li&gt;¬£2.50 singles at Brass Pig / 5 bombs for ¬£10 / 6 flavoured house shots for ¬£10&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;more to come&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;7.30pm&lt;/strong&gt; The Berkeley&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;8.30pm&lt;/strong&gt; The Brass Pig&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;9.30pm&lt;/strong&gt; mbargo&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;10.30pm&lt;/strong&gt; Lola Lo&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;-families-&quot;&gt;üë™ FAMILIES üë®‚Äçüë®‚Äçüë¶&lt;/h2&gt;

&lt;p&gt;You are encouraged to invite your CSS children for dinner before the bar crawl. We‚Äôll supply one ¬£5 Sainsbury‚Äôs voucher per family. We‚Äôll be in touch closer to the time.&lt;/p&gt;

&lt;p&gt;Stuck for ideas? &lt;a href=&quot;https://docs.google.com/document/d/1EmM2h5kJbFCklKnKz7HgAVVMYRnUVHOm1Q1JBwdXu8k/edit&quot;&gt;Here are some super-cheap meal suggestions&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;https://www.bristolsu.org.uk/groups/computer-science-society/events/css-bar-crawl-2017/buy_ticket&quot;&gt;
  Buy the t-shirt now (¬£6.50)
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;https://www.facebook.com/events/491272451246870&quot;&gt;
  Facebook event
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;https://calendar.google.com/calendar/b/1/render#eventpage_6%7Ceid-MGw5bTVvMDVxMjdobWV2NGxwZmowNDM4dmUgY3NzYnJpc3RvbC5jby51a19jbW1iNzdpNGtkNmQ5b2tmdjVuYzFwaWJuMEBn-1-0-&quot;&gt;
  View on Google Calendar
&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2017-09-29-css-bar-crawl/bar-crawl-tshirt-preview.png&quot; alt=&quot;Bar Crawl t-shirt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2017-09-29-css-bar-crawl/bar-crawl-photo-1.jpg&quot; alt=&quot;Bar Crawl 2016&quot; /&gt;
&lt;img src=&quot;/assets/images/contrib/events/2017-09-29-css-bar-crawl/bar-crawl-photo-2.jpg&quot; alt=&quot;Bar Crawl 2016&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 29 Sep 2017 17:40:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/event/2017/09/29/css-bar-crawl.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/event/2017/09/29/css-bar-crawl.html</guid>
        
        
        <category>event</category>
        
      </item>
    
      <item>
        <title>Advice for Second Years</title>
        <description>&lt;p&gt;The second year of Computer Science at Bristol is a tough one - here‚Äôs a thread of valuable tips from students who‚Äôve seen it through.&lt;/p&gt;

&lt;h2 id=&quot;note-to-my-younger-self-advice-for-thriving-in-second-year&quot;&gt;Note to my younger self: advice for thriving in second year&lt;/h2&gt;

&lt;p&gt;Ok so if I was to give advice to my younger self what would it be‚Ä¶‚Ä¶..hmmm good question.&lt;/p&gt;

&lt;p&gt;Here goes‚Ä¶‚Ä¶.Don‚Äôt feel overwhelmed. Focus on a small problem, solve that and find your next small
problem. Repeat. Understand that not everybody gets it even though it may seem that way. The
lectures don‚Äôt always relate to the coursework, google is your friend, stay calm and take one step at a
time.&lt;/p&gt;

&lt;p&gt;Figure out what you enjoy and be the best you can at it. You won‚Äôt always find every subject easy but
when you find the one that gives you a buzz, take it by the horns and immerse yourself in it.
Find a good friend to talk to about a problem that you are struggling with even if they aren‚Äôt on the
same course as you. As you are discussing the problem you‚Äôll find that things will become clearer,
you‚Äôll spot how to break it into down into bitesize chunks and usually figure out a simple answer and
wonder why you were so worried about it in the first place.&lt;/p&gt;

&lt;p&gt;Use your mentor if you have one or someone in the year above. If you don‚Äôt have one already (or
want another one), just ask. They will have already gone through what you are currently facing and
have come out the other side. Ask them for guidance, support or a gentle nudge in the right direction,
maybe over a Dominos pizza in MVB atrium (I fondly miss their student discount!).&lt;/p&gt;

&lt;p&gt;And finally, if you don‚Äôt already, set yourself a goal for something you want to achieve after graduating
and finding work. I told myself that I wanted my name to be in the credits of a Hollywood movie before
I was 25. I still remember the amazing feeling staying till the end of ‚ÄòJohn Carter‚Äô and seeing my name
up on the big screen. All the hard work and struggles you will have faced to get this far will feel so so
worth it.&lt;/p&gt;

&lt;p&gt;Sophie would also like to add that for the girls especially (but not exclusively) that it might be worth
having a quick read up on stereotype threats &lt;a href=&quot;http://en.wikipedia.org/wiki/Stereotype_threat&quot;&gt;http://en.wikipedia.org/wiki/Stereotype_threat&lt;/a&gt;. She also
went through some struggles in second year and wish she had known about this at the time.&lt;/p&gt;

&lt;p&gt;(I hope it helps) and if anyone has any more questions feel free to get in touch through Caroline.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Chris Priscott - Double Negative&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Awesome advice Chris! A couple of other things that also sprang to mind:
There‚Äôs absolute no shame in asking for help! Sometimes it can be really daunting putting your hand
up in lectures when the lecturer asks if there are any questions and the whole room is silent, but
Bristol has a really great open door policy with their lecturers. If you‚Äôre confused over the content of a
lecture or a coursework then from experience I found they were all usually very happy to sit down and
discuss it with me after the lecture - if nothing else I found that most lecturers just really like talking
about their chosen topics of interest! If it‚Äôs too intimidating going on your own grab a friend who‚Äôs also
confused (because there is no way you‚Äôre the only one, even if it seems that way) and go together.&lt;/p&gt;

&lt;p&gt;Software development is a collaborative effort, even if it doesn‚Äôt feel like it at uni. When you hit the
‚Äúreal world‚Äù pretty much everyone accepts that open discussion leads to better developers. I‚Äôll preface
this bit with ‚ÄòDon‚Äôt copy each others code because that‚Äôs plagiarism and I don‚Äôt want to get you into
trouble‚Äô but there‚Äôs absolutely nothing wrong with closing the laptops, sitting down with some other
people from the course and going ‚ÄúRight‚Ä¶ What the hell is this coursework asking of us?‚Äù&lt;/p&gt;

&lt;p&gt;Finally, find something you enjoy outside of your course. Join a society or two and give yourself
evenings off - there‚Äôs more to university life than just your degree subject and besides, that error
message you‚Äôve been staring at for the last 6 hours? Not going to happen now. Sometimes the best
thing you can do is to step away from your computer and come back to it later.&lt;/p&gt;

&lt;p&gt;Second year was the worst year for me too. I never particularly enjoyed the hardcore theoretical units
that we got taught in first and second year, and only really started to enjoy the course when we got to
third year and could pick modules that actually interested us - there‚Äôs more than one way to be a
Software Developer, and if one specific area doesn‚Äôt interest you then that‚Äôs completely fine, there are
literally hundreds of other areas that might suit you better!&lt;/p&gt;

&lt;p&gt;I also found this article a really interesting read: &lt;a href=&quot;https://medium.com/@aliciatweet/overcoming-impostor-syndrome-bdae04e46ec5&quot;&gt;https://medium.com/@aliciatweet/overcoming-impostor-syndrome-bdae04e46ec5&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Tess Conway&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Just to quickly reiterate some of the really good points made above! Ask plenty of questions, speak
openly to your lecturers and try and get excited about the topics you‚Äôre studying. In my second year I
had no idea what I wanted to do, I was on a joint honors degree (Maths &amp;amp; CS) that I wasn‚Äôt enjoying
(and borderline failing) with no job ambitions. Second year was tough, I had no say in what I wanted
to study. However, I knew making a move to Computer Science would allow me to study new and
exciting things in my third year. A year later, it was a totally different story. I was in the middle of the Games project with a great group of friends and enrolled in modules that really interested me (mainly
Computer graphics). From this point I started to have some idea about what sort of career I wanted
once I finished at Bristol, and this sort of motivation really helped! So, what got me through my second
year? Cider, hard work and a good group of friends. There was a core group of us all in the same
boat, struggling along, but pushing through the year together. Of course, plagiarism is bad, but like
Tess said, discussions are healthy and extremely productive. At the end of day, it‚Äôs all about
understanding the problem, not necessarily writing perfect code. Getting a second (or third) opinion
on something is common practice in my day-to- day at Double Negative! Second year is tough, but it
gets better. Looking back at my time at Bristol the best times were in years three and four. So keep
your chin up and power through!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Ian Lawson&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;¬†&lt;/p&gt;

&lt;p&gt;Everyone‚Äôs points are so true! Ok, mine would be: Definitely find yourself something to do outside of
your course ( preferably something that takes you out of your working environment, so going to see
movies or going on walks, join a sports team, go sketching etc.). I know what you‚Äôre thinking, there is
literally no time to do anything but coursework, and if I ‚Äòtake a break‚Äô I‚Äôll fall behind. This is not true! It‚Äôs so refreshing to have something other than your course to spend time and effort on, and it‚Äôll help you avoid burnout too. I wish I had done this, I know now it would have reduced my stress levels
massively and also meant I would have spent time following other interests at university too.&lt;/p&gt;

&lt;p&gt;Secondly, find someone within the department that you can talk to, your tutor, or Caroline, or anyone
you feel comfortable with. You are not alone in what you are going through, and if you talk to
someone in the department, they could help you if you are feeling overwhelmed. It‚Äôs also a good idea
because then you‚Äôre offloading a lot of what is going through your head and this takes some of the
pressure off. Even if you don‚Äôt like talking to people, or discussing any of the problems you may be
experiencing, I would really encourage you to find the time to send an email or talk to a friend about
your stress, it does help!&lt;/p&gt;

&lt;p&gt;Thirdly, divide and conquer! Everything seems overwhelming, the never ending coursework, the
exams, the looming deadlines. But break this down into your priorities for the current period and build
yourself up a schedule. Look at a coursework as a series of goal, e.g. ‚ÄòRig the model‚Äô, ‚ÄòDraft 7 slides
for HCI presentation‚Äô, just small steps that will lead you to where you need to be.
We all know what you‚Äôre currently experiencing, I have been there before too, so I would really
encourage you to set aside time for yourself and break down your workload into achievable chunks.
Don‚Äôt compare yourself to your peers, they are on a different journey, what matters is making sure you
are doing what‚Äôs best for you. Make sure you make time for you and that you‚Äôre taking care of your
health and your mind, I can‚Äôt emphasise that enough! Good luck! If you want to pass on my email,
that‚Äôs fine too!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;- Harshna Patel&lt;/em&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 24 Sep 2017 13:00:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/2017/09/24/second-year-advice.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/2017/09/24/second-year-advice.html</guid>
        
        
      </item>
    
      <item>
        <title>CSS joins Strava!</title>
        <description>&lt;p&gt;&lt;strong&gt;Who said nerds have to be unfit?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.strava.com/clubs/cssbristol&quot;&gt;Join the club&lt;/a&gt; on Strava for friendly competition and motivation!&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/blog/2017-08-30-nerd-run.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 30 Aug 2017 21:00:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/2017/08/30/strava.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/2017/08/30/strava.html</guid>
        
        
      </item>
    
      <item>
        <title>Event: CSS BBQ 2017</title>
        <description>&lt;p&gt;&lt;strong&gt;The Old Bowling Green, Brandon Hill - 2nd June 2017 - 12-6pm&lt;/strong&gt;
It‚Äôs that time of year again! Celebrate the end of exams with our annual CSS BBQ! Join us at The Old Bowling Green on Brandon Hill for a day of free food, drinks and entertainment!&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.eventbrite.co.uk/e/css-bbq-2017-tickets-2546474574&quot;&gt;Remember to book your free ticket through Eventbrite&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2017-06-02-CSS-BBQ-2017/BBQ.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2017-06-02-CSS-BBQ-2017/bbq-location.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2017-06-02-CSS-BBQ-2017/css-bbq-poster.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Wed, 10 May 2017 18:00:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/event/2017/05/10/CSS-BBQ-2017.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/event/2017/05/10/CSS-BBQ-2017.html</guid>
        
        
        <category>event</category>
        
      </item>
    
      <item>
        <title>Event: Explore Week Boeing Hackathon</title>
        <description>&lt;p&gt;This year we‚Äôre holding our first ever Explore Week Hackathon! &lt;strong&gt;Make the most of a week free from lectures and deadlines&lt;/strong&gt; by entering our biggest, best Hackathon yet.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.facebook.com/events/392877197725107/&quot; class=&quot;btn btn--dark&quot;&gt;Facebook Event&lt;/a&gt;
&lt;a href=&quot;https://goo.gl/forms/lFDrMaW7tgRLT0ah2&quot; class=&quot;btn btn--dark&quot;&gt;Sign Up Now&lt;/a&gt;
&lt;a href=&quot;/pages/hackathon-2017&quot; class=&quot;btn btn--dark&quot;&gt;Find out more&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/contrib/events/2017-02-27-hackathon/hackathon-cover-image.png&quot; alt=&quot;CSS Explore Week Hackathon 2017&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;sign-up-now&quot;&gt;&lt;a href=&quot;https://goo.gl/forms/lFDrMaW7tgRLT0ah2&quot;&gt;Sign up now!&lt;/a&gt;&lt;/h2&gt;

&lt;p&gt;Teams can be composed of &lt;strong&gt;up to 6 people&lt;/strong&gt;. Make sure you &lt;a href=&quot;https://goo.gl/forms/lFDrMaW7tgRLT0ah2&quot;&gt;sign up&lt;/a&gt; so we can reserve your place!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Don‚Äôt have a team yet?&lt;/strong&gt; We‚Äôre happy to help match you up with people! Just mention it on the signup form.&lt;/p&gt;

&lt;p&gt;Never done something like this before? Don‚Äôt worry - anyone can participate!&lt;/p&gt;

&lt;h2 id=&quot;prizes&quot;&gt;Prizes&lt;/h2&gt;

&lt;p&gt;There are three prize categories:&lt;/p&gt;

&lt;h3 id=&quot;best-environmental-impact&quot;&gt;Best environmental impact&lt;/h3&gt;
&lt;p&gt;¬£100 cash per team member&lt;/p&gt;

&lt;h3 id=&quot;best-implemented-prototype&quot;&gt;Best-implemented prototype&lt;/h3&gt;
&lt;p&gt;Quadcopter per team member&lt;/p&gt;

&lt;h3 id=&quot;most-creative-idea&quot;&gt;Most creative idea&lt;/h3&gt;
&lt;p&gt;Google Chromecast per team member&lt;/p&gt;

&lt;h2 id=&quot;theme&quot;&gt;Theme&lt;/h2&gt;

&lt;p&gt;This year‚Äôs theme: &lt;strong&gt;build something that might help protect or improve the environment&lt;/strong&gt;!&lt;/p&gt;

&lt;p&gt;We‚Äôre deliberately keeping this as broad as possible, because we want to see what you come up with!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;MVB Atrium - 27th February 2017 - midday&lt;/strong&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 17 Feb 2017 15:49:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/event/2017/02/17/boeing-hackathon.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/event/2017/02/17/boeing-hackathon.html</guid>
        
        
        <category>event</category>
        
      </item>
    
      <item>
        <title>CSS Goes Outside: join a sports team!</title>
        <description>&lt;p&gt;Interested in (casually!) playing one of these sports in a CS team?&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;5-aside/11-aside football&lt;/li&gt;
  &lt;li&gt;Mixed hockey&lt;/li&gt;
  &lt;li&gt;Badminton&lt;/li&gt;
  &lt;li&gt;Basketball&lt;/li&gt;
  &lt;li&gt;Women‚Äôs 5-aside football&lt;/li&gt;
  &lt;li&gt;Indoor cricket&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let us know ASAP - league places fill up fast - and we‚Äôll do our best to get some of these teams up and running.&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;mailto:sports@cssbristol.co.uk&quot;&gt;
  Tell us what you want to do!
&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 02 Oct 2016 18:39:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/2016/10/02/CSS-goes-outside-join-a-sports-team.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/2016/10/02/CSS-goes-outside-join-a-sports-team.html</guid>
        
        
      </item>
    
      <item>
        <title>Sign up to the CSS mailing list and WIN!</title>
        <description>&lt;p&gt;This year, we‚Äôre starting a monthly(-ish) email newsletter. Find out about CSS events, news, trips and job postings.&lt;/p&gt;

&lt;h2 id=&quot;i-hear-there-are-prizes&quot;&gt;I hear there are prizes?&lt;/h2&gt;

&lt;p&gt;Yes - it‚Äôs true! Win a Raspberry Pi Zero with an 8GB MicroSD; WiFi adapter; MiniHDMI and MiniUSB adapters. All you need to do is sign up for the shiny new CSS mailing list before 6pm on Friday September 30!&lt;/p&gt;

&lt;p&gt;&lt;a class=&quot;btn btn--dark&quot; href=&quot;https://docs.google.com/a/cssbristol.co.uk/forms/d/e/1FAIpQLSdFG_iaSFe6nNiTpm7b6euwwBVxG0yHxWRz18rxlQfmk2YvLg/viewform&quot;&gt;
  Get the newsletter
&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 24 Sep 2016 12:06:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/2016/09/24/email-newsletter-signup.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/2016/09/24/email-newsletter-signup.html</guid>
        
        
      </item>
    
      <item>
        <title>Welcome!</title>
        <description>&lt;p&gt;Hello and welcome to all of you who will be joining us this year.&lt;/p&gt;

&lt;p&gt;Sidle on over to our dedicated &lt;a href=&quot;/pages/freshers/&quot;&gt;freshers‚Äô page&lt;/a&gt; for more information.&lt;/p&gt;
</description>
        <pubDate>Fri, 19 Aug 2016 21:22:00 +0000</pubDate>
        <link>http://www.cssbristol.co.uk/2016/08/19/welcome.html</link>
        <guid isPermaLink="true">http://www.cssbristol.co.uk/2016/08/19/welcome.html</guid>
        
        
      </item>
    
  </channel>
</rss>
